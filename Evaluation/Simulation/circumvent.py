import argparse
import os
def main(args):
    #we use the directory of the fastq_files generated by isONclust as input
    outdir=args.in_folder
    overall_form=0
    overall_clust=0
    files_to_remove=[]
    outname="PrecisionAnalysis.txt"
    outfile=os.path.join(outdir,outname)
    outfile_handle= open(outfile, "w")
    #iterate over all files in the directory
    for filename in os.listdir(outdir):
        if filename.startswith("results_ison_"):
        #if analysisfile.startswith("results_ison_"):
            #merge the full filepath 
            this_file=os.path.join(outdir,filename)
            id_dict={}
            form_error=0
            clust_error=0
            with open(this_file) as r_out:
                lines = r_out.readlines()
                for line in lines:
            	    if not line.startswith("q_acc"):
            	        splitline=line.split(",")
            	        ison_id=splitline[0]
            	        ison_split=ison_id.split("_")
            	        ison_cl_id=ison_split[0]
            	        ref_id=splitline[1]
            	        if not ref_id in id_dict:
            	            id_dict[ref_id]=[]
            	            id_dict[ref_id].append(ison_cl_id)
            	        else:
            	            if ison_cl_id in id_dict[ref_id]:
            	                form_error+=1
            	            else:
            	                id_dict[ref_id].append(ison_cl_id)
            	                clust_error+=1
            r_out.close()
            overall_form+=form_error
            overall_clust+=clust_error
            outfile_handle.write("Form: {0}, Clust: {1},{2}\n".format(form_error, clust_error, id_dict))
    outfile_handle.write("OverallForm: {0}, OverallClust: {1}\n".format(overall_form, overall_clust))
            			

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Filtering of clusters having less than iso_abundance  reads",
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--in_folder', type=str, default=False, help='Path to the alignment files')
    args = parser.parse_args()
    main(args)
